{"ast":null,"code":"import produce from \"immer\";\nexport const authReducer = produce((state, _ref) => {\n  var _payload$foundUser, _payload$foundUser2;\n\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case \"LOGIN\":\n      state.token = payload.encodedToken;\n      state.userName = (_payload$foundUser = payload.foundUser) === null || _payload$foundUser === void 0 ? void 0 : _payload$foundUser.firstName;\n      state.addresses = (_payload$foundUser2 = payload.foundUser) === null || _payload$foundUser2 === void 0 ? void 0 : _payload$foundUser2.addresses;\n      break;\n\n    case \"LOG_OUT\":\n      state.token = payload.token;\n      state.userName = payload.userName;\n      break;\n\n    case \"ADD_ADDRESS\":\n      state.addresses.push(payload);\n      break;\n\n    case \"DELETE_ADDRESS\":\n    case \"UPDATE_ADDRESS\":\n      state.addresses = payload;\n      break;\n\n    default:\n      throw new Error(\"Unhandled type in auth reducer\");\n  }\n});","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/autodecore-store/src/context/reducers/auth-reducer.js"],"names":["produce","authReducer","state","type","payload","token","encodedToken","userName","foundUser","firstName","addresses","push","Error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,OAAO,CAAC,CAACE,KAAD,WAA8B;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC/D,UAAQD,IAAR;AACE,SAAK,OAAL;AACED,MAAAA,KAAK,CAACG,KAAN,GAAcD,OAAO,CAACE,YAAtB;AACAJ,MAAAA,KAAK,CAACK,QAAN,yBAAiBH,OAAO,CAACI,SAAzB,uDAAiB,mBAAmBC,SAApC;AACAP,MAAAA,KAAK,CAACQ,SAAN,0BAAkBN,OAAO,CAACI,SAA1B,wDAAkB,oBAAmBE,SAArC;AACA;;AAEF,SAAK,SAAL;AACER,MAAAA,KAAK,CAACG,KAAN,GAAcD,OAAO,CAACC,KAAtB;AACAH,MAAAA,KAAK,CAACK,QAAN,GAAiBH,OAAO,CAACG,QAAzB;AACA;;AAEF,SAAK,aAAL;AACEL,MAAAA,KAAK,CAACQ,SAAN,CAAgBC,IAAhB,CAAqBP,OAArB;AACA;;AAEF,SAAK,gBAAL;AACA,SAAK,gBAAL;AACEF,MAAAA,KAAK,CAACQ,SAAN,GAAkBN,OAAlB;AACA;;AAEF;AACE,YAAM,IAAIQ,KAAJ,CAAU,gCAAV,CAAN;AAtBJ;AAwBD,CAzBiC,CAA3B","sourcesContent":["import produce from \"immer\";\n\nexport const authReducer = produce((state, { type, payload }) => {\n  switch (type) {\n    case \"LOGIN\":\n      state.token = payload.encodedToken;\n      state.userName = payload.foundUser?.firstName;\n      state.addresses = payload.foundUser?.addresses;\n      break;\n\n    case \"LOG_OUT\":\n      state.token = payload.token;\n      state.userName = payload.userName;\n      break;\n\n    case \"ADD_ADDRESS\":\n      state.addresses.push(payload);\n      break;\n\n    case \"DELETE_ADDRESS\":\n    case \"UPDATE_ADDRESS\":\n      state.addresses = payload;\n      break;\n\n    default:\n      throw new Error(\"Unhandled type in auth reducer\");\n  }\n});\n"]},"metadata":{},"sourceType":"module"}