{"ast":null,"code":"var _jsxFileName = \"/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/authentication/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { BtnComplementary } from \"../buttons\";\nimport { ErrorMessage } from \"./sub-components/ErrorMessage\";\nimport { ShowPasswordVisibility } from \"./sub-components/ShowPasswordVisibility\";\nimport { handleSignupSubmit } from \"./utils/handle-signup-submit\";\nimport { InlineLoader } from \"../loader/InlineLoader\";\nimport { useAuth, useToast } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Signup() {\n  _s();\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false);\n  const [loading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuth();\n  const {\n    setToastMessage\n  } = useToast();\n  const navigate = useNavigate();\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const [singupValues, setSignupValues] = useState(initialValues);\n  const [signupErrors, setSignupErrors] = useState(initialValues);\n\n  const handleSingupValues = e => {\n    const {\n      name: key,\n      value\n    } = e.target;\n    setSignupValues(s => ({ ...s,\n      [key]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-form-wrapper flex flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"signup flex  mx-1 w-100 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup__message p-1 flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Looks like you are new here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Sign up with your email address to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup__form mt-1 p-1 flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"first-name\",\n                  className: \"form-label  field-required\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-field my-sm p-sm border-sm w-100\",\n                  placeholder: \"John\",\n                  id: \"first-name\",\n                  name: \"firstName\",\n                  required: true,\n                  onChange: e => handleSingupValues(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this), signupErrors.firstName && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  text: signupErrors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"last-name\",\n                  className: \"form-label  field-required\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-field my-sm p-sm border-sm w-100\",\n                  placeholder: \"Doe\",\n                  id: \"last-name\",\n                  required: true,\n                  name: \"lastName\",\n                  onChange: e => handleSingupValues(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), signupErrors.lastName && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  text: signupErrors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"input\",\n                  className: \"form-label  field-required\",\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-field my-sm p-sm border-sm w-100\",\n                  placeholder: \"johndoe@example.com\",\n                  id: \"input\",\n                  name: \"email\",\n                  onChange: e => handleSingupValues(e),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), signupErrors.email && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  text: signupErrors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label  field-required\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-icon\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: isPasswordVisible ? \"text\" : \"password\",\n                    className: \"form-field my-sm p-sm border-sm w-100\",\n                    placeholder: \"*********\",\n                    id: \"password\",\n                    name: \"password\",\n                    onChange: e => handleSingupValues(e),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ShowPasswordVisibility, {\n                    isVisible: isPasswordVisible,\n                    onClick: () => setIsPasswordVisible(p => !p)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), signupErrors.password && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  text: signupErrors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirm-password\",\n                  className: \"form-label  field-required\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-icon\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: isConfirmPasswordVisible ? \"text\" : \"password\",\n                    className: \"form-field my-sm p-sm border-sm w-100\",\n                    placeholder: \"*********\",\n                    id: \"confirm-password\",\n                    name: \"confirmPassword\",\n                    onChange: e => handleSingupValues(e),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ShowPasswordVisibility, {\n                    isVisible: isConfirmPasswordVisible,\n                    onClick: () => setIsConfirmPasswordVisible(p => !p)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), signupErrors.confirmPassword && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  text: signupErrors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BtnComplementary, {\n                cnames: \"signup-submit w-100 mt-1\",\n                type: \"submit\",\n                onClick: e => handleSignupSubmit(e, singupValues, setSignupErrors, setIsLoading, dispatch, navigate, setToastMessage),\n                disabled: loading,\n                children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(InlineLoader, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this), \" Please Wait\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this) : \"Create New Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt-center my-1 primary-link\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: [\"Already have an account\", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-chevron-circle-right ml-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"xH67YiLVp5aBkLnzGh/t8rSvrQY=\", false, function () {\n  return [useAuth, useToast, useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/authentication/Signup.jsx"],"names":["useState","Link","useNavigate","BtnComplementary","ErrorMessage","ShowPasswordVisibility","handleSignupSubmit","InlineLoader","useAuth","useToast","Signup","isPasswordVisible","setIsPasswordVisible","isConfirmPasswordVisible","setIsConfirmPasswordVisible","loading","setIsLoading","dispatch","setToastMessage","navigate","initialValues","firstName","lastName","email","password","confirmPassword","singupValues","setSignupValues","signupErrors","setSignupErrors","handleSingupValues","e","name","key","value","target","s","p"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { BtnComplementary } from \"../buttons\";\nimport { ErrorMessage } from \"./sub-components/ErrorMessage\";\nimport { ShowPasswordVisibility } from \"./sub-components/ShowPasswordVisibility\";\nimport { handleSignupSubmit } from \"./utils/handle-signup-submit\";\nimport { InlineLoader } from \"../loader/InlineLoader\";\nimport { useAuth, useToast } from \"../../context\";\n\nexport function Signup() {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] =\n    useState(false);\n  const [loading, setIsLoading] = useState(false);\n\n  const { dispatch } = useAuth();\n  const { setToastMessage } = useToast();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const [singupValues, setSignupValues] = useState(initialValues);\n\n  const [signupErrors, setSignupErrors] = useState(initialValues);\n\n  const handleSingupValues = (e) => {\n    const { name: key, value } = e.target;\n\n    setSignupValues((s) => ({ ...s, [key]: value }));\n  };\n\n  return (\n    <div className=\"main-wrapper\">\n      <main>\n        <div className=\"signup-form-wrapper flex flex-center\">\n          <article className=\"signup flex  mx-1 w-100 \">\n            <div className=\"signup__message p-1 flex-grow\">\n              <h2>Looks like you are new here!</h2>\n              <p>Sign up with your email address to get started.</p>\n            </div>\n            <div className=\"signup__form mt-1 p-1 flex-grow\">\n              <form>\n                <div>\n                  <label\n                    htmlFor=\"first-name\"\n                    className=\"form-label  field-required\"\n                  >\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-field my-sm p-sm border-sm w-100\"\n                    placeholder=\"John\"\n                    id=\"first-name\"\n                    name=\"firstName\"\n                    required\n                    onChange={(e) => handleSingupValues(e)}\n                  />\n\n                  {signupErrors.firstName && (\n                    <ErrorMessage text={signupErrors.firstName} />\n                  )}\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"last-name\"\n                    className=\"form-label  field-required\"\n                  >\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-field my-sm p-sm border-sm w-100\"\n                    placeholder=\"Doe\"\n                    id=\"last-name\"\n                    required\n                    name=\"lastName\"\n                    onChange={(e) => handleSingupValues(e)}\n                  />\n\n                  {signupErrors.lastName && (\n                    <ErrorMessage text={signupErrors.lastName} />\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"input\" className=\"form-label  field-required\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-field my-sm p-sm border-sm w-100\"\n                    placeholder=\"johndoe@example.com\"\n                    id=\"input\"\n                    name=\"email\"\n                    onChange={(e) => handleSingupValues(e)}\n                    required\n                  />\n\n                  {signupErrors.email && (\n                    <ErrorMessage text={signupErrors.email} />\n                  )}\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"password\"\n                    className=\"form-label  field-required\"\n                  >\n                    Password\n                  </label>\n\n                  <div className=\"input-icon\">\n                    <input\n                      type={isPasswordVisible ? \"text\" : \"password\"}\n                      className=\"form-field my-sm p-sm border-sm w-100\"\n                      placeholder=\"*********\"\n                      id=\"password\"\n                      name=\"password\"\n                      onChange={(e) => handleSingupValues(e)}\n                      required\n                    />\n\n                    <ShowPasswordVisibility\n                      isVisible={isPasswordVisible}\n                      onClick={() => setIsPasswordVisible((p) => !p)}\n                    />\n                  </div>\n\n                  {signupErrors.password && (\n                    <ErrorMessage text={signupErrors.password} />\n                  )}\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"confirm-password\"\n                    className=\"form-label  field-required\"\n                  >\n                    Confirm Password\n                  </label>\n\n                  <div className=\"input-icon\">\n                    <input\n                      type={isConfirmPasswordVisible ? \"text\" : \"password\"}\n                      className=\"form-field my-sm p-sm border-sm w-100\"\n                      placeholder=\"*********\"\n                      id=\"confirm-password\"\n                      name=\"confirmPassword\"\n                      onChange={(e) => handleSingupValues(e)}\n                      required\n                    />\n\n                    <ShowPasswordVisibility\n                      isVisible={isConfirmPasswordVisible}\n                      onClick={() => setIsConfirmPasswordVisible((p) => !p)}\n                    />\n                  </div>\n\n                  {signupErrors.confirmPassword && (\n                    <ErrorMessage text={signupErrors.confirmPassword} />\n                  )}\n                </div>\n\n                <BtnComplementary\n                  cnames=\"signup-submit w-100 mt-1\"\n                  type=\"submit\"\n                  onClick={(e) =>\n                    handleSignupSubmit(\n                      e,\n                      singupValues,\n                      setSignupErrors,\n                      setIsLoading,\n                      dispatch,\n                      navigate,\n                      setToastMessage\n                    )\n                  }\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <span>\n                      <InlineLoader /> Please Wait\n                    </span>\n                  ) : (\n                    \"Create New Account\"\n                  )}\n                </BtnComplementary>\n              </form>\n\n              <div className=\"txt-center my-1 primary-link\">\n                <Link to=\"/login\">\n                  Already have an account\n                  <i className=\"fas fa-chevron-circle-right ml-sm\"></i>\n                </Link>\n              </div>\n            </div>\n          </article>\n        </div>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}