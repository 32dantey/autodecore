{"ast":null,"code":"var _jsxFileName = \"/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/Toast/Toast.jsx\",\n    _s = $RefreshSig$();\n\nimport { FaCheckCircle, FaInfoCircle } from \"react-icons/fa\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./toast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Toast = _ref => {\n  _s();\n\n  let {\n    type,\n    message\n  } = _ref;\n  const location = useLocation();\n  const [isToastShown, setIsToastShown] = useState(false);\n  const path = location.pathname;\n  useEffect(() => {\n    setIsToastShown(true);\n    let id = setTimeout(() => {\n      setIsToastShown(false);\n    }, 3000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isToastShown && message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-container flex flex-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${type} txt-bold  flex flex-center`,\n        style: location.pathname == \"/products\" && window.innerWidth < 769 ? {\n          bottom: \"80px\"\n        } : {},\n        children: [type == \"success\" ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-1\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Toast, \"8YiLVPRTaqrA2bjmlUGrBk7UDA8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/Toast/Toast.jsx"],"names":["FaCheckCircle","FaInfoCircle","useLocation","useEffect","useState","Toast","type","message","location","isToastShown","setIsToastShown","path","pathname","id","setTimeout","clearTimeout","window","innerWidth","bottom"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,aAAP;;;AAEA,OAAO,MAAMC,KAAK,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;AAC1C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMO,IAAI,GAAGH,QAAQ,CAACI,QAAtB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEA,QAAIG,EAAE,GAAGC,UAAU,CAAC,MAAM;AACxBJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFkB,EAEhB,IAFgB,CAAnB;AAIA,WAAO,MAAM;AACXK,MAAAA,YAAY,CAACF,EAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,OAAD,CAVM,CAAT;AAYA,sBACE;AAAA,cACGE,YAAY,IAAIF,OAAhB,gBACC;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,eAAcD,IAAK,6BADjC;AAEE,QAAA,KAAK,EACHE,QAAQ,CAACI,QAAT,IAAqB,WAArB,IAAoCI,MAAM,CAACC,UAAP,GAAoB,GAAxD,GACI;AACEC,UAAAA,MAAM,EAAE;AADV,SADJ,GAII,EAPR;AAAA,mBAUGZ,IAAI,IAAI,SAAR,gBAAoB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAApB,gBAAwC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAV3C,eAWE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAgBG;AAjBN,mBADF;AAqBD,CAtCM;;GAAMF,K;UACMH,W;;;KADNG,K","sourcesContent":["import { FaCheckCircle, FaInfoCircle } from \"react-icons/fa\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./toast.css\";\n\nexport const Toast = ({ type, message }) => {\n  const location = useLocation();\n  const [isToastShown, setIsToastShown] = useState(false);\n  const path = location.pathname;\n\n  useEffect(() => {\n    setIsToastShown(true);\n\n    let id = setTimeout(() => {\n      setIsToastShown(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(id);\n    };\n  }, [message]);\n\n  return (\n    <>\n      {isToastShown && message ? (\n        <div className=\"toast-container flex flex-center\">\n          <div\n            className={`toast toast-${type} txt-bold  flex flex-center`}\n            style={\n              location.pathname == \"/products\" && window.innerWidth < 769\n                ? {\n                    bottom: \"80px\",\n                  }\n                : {}\n            }\n          >\n            {type == \"success\" ? <FaCheckCircle /> : <FaInfoCircle />}\n            <span className=\"ml-1\">{message}</span>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}