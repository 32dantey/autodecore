{"ast":null,"code":"var _jsxFileName = \"/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/context/auth-context.js\",\n    _JSON$parse,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useReducer, useContext } from \"react\";\nimport { authReducer } from \"./reducers/auth-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAuthState = {\n  userName: localStorage.getItem(\"userName\"),\n  token: localStorage.getItem(\"token\"),\n  addresses: (_JSON$parse = JSON.parse(localStorage.getItem(\"data\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.addresses\n};\nconst AuthContext = /*#__PURE__*/createContext(initialAuthState);\nexport function AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, initialAuthState);\n\n  const handleLogout = (dataDispatch, setToastMessage, navigate) => {\n    localStorage.clear();\n    dispatch({\n      type: \"LOG_OUT\",\n      payload: {\n        userName: null,\n        token: null\n      }\n    });\n    dataDispatch({\n      type: \"LOG_OUT\"\n    });\n    setToastMessage({\n      type: \"success\",\n      message: \"Logout Successful\"\n    });\n    navigate(\"/\");\n  };\n\n  const value = {\n    state,\n    dispatch,\n    handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthProvider, \"8VQcfKNCRaUce8I9yw7D5O0pzCg=\");\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/context/auth-context.js"],"names":["createContext","useReducer","useContext","authReducer","initialAuthState","userName","localStorage","getItem","token","addresses","JSON","parse","AuthContext","AuthProvider","children","state","dispatch","handleLogout","dataDispatch","setToastMessage","navigate","clear","type","payload","message","value","useAuth"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CADa;AAEvBC,EAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFgB;AAGvBE,EAAAA,SAAS,iBAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAF,gDAAE,YAA0CE;AAH9B,CAAzB;AAMA,MAAMG,WAAW,gBAAGZ,aAAa,CAACI,gBAAD,CAAjC;AAEA,OAAO,SAASS,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACE,WAAD,EAAcC,gBAAd,CAApC;;AAEA,QAAMa,YAAY,GAAG,CAACC,YAAD,EAAeC,eAAf,EAAgCC,QAAhC,KAA6C;AAChEd,IAAAA,YAAY,CAACe,KAAb;AACAL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAAElB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBG,QAAAA,KAAK,EAAE;AAAzB;AAA5B,KAAD,CAAR;AACAU,IAAAA,YAAY,CAAC;AACXI,MAAAA,IAAI,EAAE;AADK,KAAD,CAAZ;AAIAH,IAAAA,eAAe,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBE,MAAAA,OAAO,EAAE;AAA5B,KAAD,CAAf;AAEAJ,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAVD;;AAYA,QAAMK,KAAK,GAAG;AAAEV,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAd;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEQ,KAA7B;AAAA,cAAqCX;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBeD,Y;;KAAAA,Y;AAmBhB,OAAO,MAAMa,OAAO,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACU,WAAD,CAAhB;AAAA,CAAhB;;IAAMc,O","sourcesContent":["import { createContext, useReducer, useContext } from \"react\";\nimport { authReducer } from \"./reducers/auth-reducer\";\n\nconst initialAuthState = {\n  userName: localStorage.getItem(\"userName\"),\n  token: localStorage.getItem(\"token\"),\n  addresses: JSON.parse(localStorage.getItem(\"data\"))?.addresses,\n};\n\nconst AuthContext = createContext(initialAuthState);\n\nexport function AuthProvider({ children }) {\n  const [state, dispatch] = useReducer(authReducer, initialAuthState);\n\n  const handleLogout = (dataDispatch, setToastMessage, navigate) => {\n    localStorage.clear();\n    dispatch({ type: \"LOG_OUT\", payload: { userName: null, token: null } });\n    dataDispatch({\n      type: \"LOG_OUT\",\n    });\n\n    setToastMessage({ type: \"success\", message: \"Logout Successful\" });\n\n    navigate(\"/\");\n  };\n\n  const value = { state, dispatch, handleLogout };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuth = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}