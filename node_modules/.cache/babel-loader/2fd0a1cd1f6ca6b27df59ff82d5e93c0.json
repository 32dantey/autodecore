{"ast":null,"code":"var _jsxFileName = \"/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/home/Category.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useData } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Category(_ref) {\n  _s();\n\n  let {\n    categoryName,\n    sources\n  } = _ref;\n  const {\n    dispatch\n  } = useData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white mb-1\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"category-section  txt-center p-sm pb-1 \",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"py-1\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h3\",\n          children: categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-container gap-1 m-sm\",\n        children: sources.map(_ref2 => {\n          let {\n            categoryName,\n            image\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/products\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              onClick: () => {\n                dispatch({\n                  type: \"FILTER_BY_CATEGORY\",\n                  payload: {\n                    isChecked: true,\n                    value: categoryName.toLowerCase()\n                  }\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: categoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this)\n            }, categoryName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this)\n          }, categoryName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"5PHqboaeDdcnqIVP+6eA8B5YGk4=\", false, function () {\n  return [useData];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/components/home/Category.jsx"],"names":["Link","useData","Category","categoryName","sources","dispatch","map","image","type","payload","isChecked","value","toLowerCase"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,OAAO,SAASC,QAAT,OAA6C;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA2B;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,OAAO,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,yCAAnB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA,oBAAoBE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,kBACGC,OAAO,CAACE,GAAR,CAAY,SAA6B;AAAA,cAA5B;AAAEH,YAAAA,YAAF;AAAgBI,YAAAA;AAAhB,WAA4B;AACxC,8BACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAA,mCACE;AAEE,cAAA,OAAO,EAAE,MAAM;AACbF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAE,oBADC;AAEPC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,SAAS,EAAE,IADJ;AAEPC,oBAAAA,KAAK,EAAER,YAAY,CAACS,WAAb;AAFA;AAFF,iBAAD,CAAR;AAOD,eAVH;AAAA,qCAYE;AAAK,gBAAA,GAAG,EAAEL,KAAV;AAAiB,gBAAA,GAAG,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA;AAZF,eACOA,YADP;AAAA;AAAA;AAAA;AAAA;AADF,aAA0BA,YAA1B;AAAA;AAAA;AAAA;AAAA,kBADF;AAkBD,SAnBA;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAlCeD,Q;UACOD,O;;;KADPC,Q","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useData } from \"../../context\";\n\nexport function Category({ categoryName, sources }) {\n  const { dispatch } = useData();\n  return (\n    <div className=\"bg-white mb-1\">\n      <section className=\"category-section  txt-center p-sm pb-1 \">\n        <header className=\"py-1\">\n          <h2 className=\"h3\">{categoryName}</h2>\n        </header>\n\n        <div className=\"category-container gap-1 m-sm\">\n          {sources.map(({ categoryName, image }) => {\n            return (\n              <Link to=\"/products\" key={categoryName}>\n                <figure\n                  key={categoryName}\n                  onClick={() => {\n                    dispatch({\n                      type: \"FILTER_BY_CATEGORY\",\n                      payload: {\n                        isChecked: true,\n                        value: categoryName.toLowerCase(),\n                      },\n                    });\n                  }}\n                >\n                  <img src={image} alt={categoryName} />\n                </figure>\n              </Link>\n            );\n          })}\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}