{"ast":null,"code":"import axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nimport { isInList, getProduct } from \"./helper-function\";\nexport const getProducts = async dispatch => {\n  try {\n    const res = await axios.get(\"/api/products\");\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"SET_PRODUCTS\",\n        payload: res.data.products\n      });\n    }\n  } catch (error) {\n    throw new Error(\"Products can not be loaded\");\n  }\n};\nexport const getCategories = async dispatch => {\n  try {\n    const res = await axios.get(\"/api/categories\");\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"SET_CATEGORIES\",\n        payload: res.data.categories\n      });\n    }\n  } catch (err) {\n    throw new Error(\"Categories can not be loaded,\", err);\n  }\n};\nexport const getCart = async (dispatch, token) => {\n  if (token) {\n    const cart = JSON.parse(localStorage.getItem(\"data\")).cart;\n    dispatch({\n      type: \"SET_CART\",\n      payload: cart\n    });\n  }\n};\nexport const getWishList = async (dispatch, token) => {\n  if (token) {\n    const wishlist = JSON.parse(localStorage.getItem(\"data\")).wishlist;\n    dispatch({\n      type: \"SET_WISHLIST\",\n      payload: wishlist\n    });\n  }\n};\nexport const login = async (dispatch, email, password, setIsLoading, navigate, setToastMessage, from) => {\n  setIsLoading(true);\n\n  try {\n    const res = await axios.post(\"/api/auth/login\", {\n      email,\n      password\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: res.data\n      });\n      localStorage.setItem(\"data\", JSON.stringify(res.data.foundUser));\n      localStorage.setItem(\"token\", res.data.encodedToken);\n      localStorage.setItem(\"userName\", res.data.foundUser.firstName);\n    }\n\n    setIsLoading(false);\n    navigate(from);\n    setToastMessage({\n      type: \"success\",\n      message: \"Login Successful!\"\n    });\n  } catch (error) {\n    var _error$response;\n\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) == 404) {\n      setToastMessage({\n        type: \"info\",\n        message: \"You are not registered with us. Please sign up\"\n      });\n    } else {\n      setToastMessage({\n        type: \"error\",\n        message: \"Inavid email or password.\"\n      });\n    }\n\n    setIsLoading(false);\n    throw new Error(\"can not be logged in\");\n  }\n};\nexport const signup = async (email, password, firstName, lastName, dispatch, setIsLoading, navigate, setToastMessage) => {\n  setIsLoading(true);\n\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"/api/auth/signup\",\n      data: {\n        email,\n        password,\n        firstName,\n        lastName\n      }\n    });\n\n    if (res.status == 201) {\n      login(dispatch, email, password, setIsLoading, navigate);\n      setIsLoading(false);\n      setToastMessage({\n        type: \"success\",\n        message: \"Signup Successful\"\n      });\n    }\n  } catch (error) {\n    var _error$response2;\n\n    setIsLoading(false);\n\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) == 422) {\n      setToastMessage({\n        type: \"info\",\n        message: \"You are already registerd. Please log in\"\n      });\n    }\n\n    throw new Error(\"Can not sign up\");\n  }\n};\nexport const toggleWishList = async (dispatch, product, setIsUpdating, state, token, setToastMessage) => {\n  setIsUpdating(true);\n\n  if (!isInList(state.productsInWishList, product._id)) {\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: \"/api/user/wishlist\",\n        data: {\n          product\n        },\n        headers: {\n          authorization: token\n        }\n      });\n\n      if (res.status = \"200\" || res.status == \"201\") {\n        dispatch({\n          type: \"ADD_TO_WISHLIST\",\n          payload: res.data.wishlist\n        });\n        let data = JSON.parse(localStorage.getItem(\"data\"));\n        data = { ...data,\n          wishlist: [...data.wishlist, product]\n        };\n        localStorage.setItem(\"data\", JSON.stringify(data));\n      }\n\n      setIsUpdating(false);\n      setToastMessage({\n        type: \"info\",\n        message: \"Item added to wishlist\"\n      });\n    } catch (error) {\n      setToastMessage({\n        type: \"error\",\n        message: \"Action failed. Please try again later.\"\n      });\n      throw new Error(\"can not be added to wishlist\");\n    }\n  } else {\n    removeItemFromWishlist(dispatch, product, setIsUpdating, token, setToastMessage);\n  }\n};\nexport const removeItemFromWishlist = async (dispatch, product, setIsUpdating, token, setToastMessage) => {\n  try {\n    const res = await axios({\n      method: \"delete\",\n      url: `/api/user/wishlist/${product[\"_id\"]}`,\n      headers: {\n        authorization: token\n      }\n    });\n\n    if (res.status = \"200\" || res.status == \"201\") {\n      dispatch({\n        type: \"REMOVE_ITEM_FROM_WISHLIST\",\n        payload: res.data.wishlist\n      });\n      let data = JSON.parse(localStorage.getItem(\"data\"));\n      data = { ...data,\n        wishlist: res.data.wishlist\n      };\n      localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"info\",\n      message: \"Item removed from wishlist\"\n    });\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n    throw new Error(\"can not be deleted from wishlist\");\n  }\n};\nexport const addItemToCart = async (dispatch, product, setIsUpdating, state, token, setToastMessage) => {\n  try {\n    setIsUpdating(true);\n    const res = await axios({\n      method: \"post\",\n      url: \"/api/user/cart\",\n      data: {\n        product\n      },\n      headers: {\n        authorization: token\n      }\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"SET_CART\",\n        payload: res.data.cart\n      });\n      let data = JSON.parse(localStorage.getItem(\"data\"));\n      data = { ...data,\n        cart: [...data.cart, product]\n      };\n      localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n\n    setToastMessage({\n      type: \"info\",\n      message: \"Item added to cart\"\n    });\n    setIsUpdating(false);\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n    throw new Error(\"failed! try again\");\n  }\n};\nexport const removeItemFromCart = async (dispatch, product, setIsUpdating, token, setToastMessage) => {\n  setIsUpdating(true);\n\n  try {\n    const res = await axios({\n      method: \"delete\",\n      url: `/api/user/cart/${product._id}`,\n      headers: {\n        authorization: token\n      }\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"REMOVE_ITEM_FROM_CART\",\n        payload: res.data.cart\n      });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data,\n      cart: res.data.cart\n    };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"info\",\n      message: \"Item is removed from cart.\"\n    });\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n    throw new Error(\"Item can not be removed\");\n  }\n};\nexport const saveToWishlist = async (dispatch, product, setIsUpdating, state, token, setToastMessage) => {\n  try {\n    removeItemFromCart(dispatch, product, setIsUpdating, token);\n\n    if (!isInList(state.productsInWishList, product._id)) {\n      toggleWishList(dispatch, product, setIsUpdating, state, token);\n    }\n\n    setToastMessage({\n      type: \"info\",\n      message: \"Item is saved to wishlist\"\n    });\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n    throw new Error(\"Item can not be saved to wishlist\");\n  }\n};\nexport const updateProductQuantity = async (dispatch, product, setIsUpdating, state, token, type, setToastMessage) => {\n  setIsUpdating(true);\n\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: `/api/user/cart/${product._id}`,\n      data: {\n        action: {\n          type\n        }\n      },\n      headers: {\n        authorization: token\n      }\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"UPDATE_CART_QUANTITY\",\n        payload: res.data.cart\n      });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data,\n      cart: res.data.cart\n    };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n    setIsUpdating(false);\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n  }\n};\nexport const moveToCart = async (dispatch, product, setIsUpdating, state, token, navigate, setToastMessage) => {\n  try {\n    if (!isInList(state.productsInCart, product._id)) {\n      await addItemToCart(dispatch, product, setIsUpdating, state, token, setToastMessage);\n    } else {\n      const cartProduct = getProduct(state.productsInCart, product._id);\n\n      if (cartProduct.qty < cartProduct.avalQty) {\n        await updateProductQuantity(dispatch, product, setIsUpdating, state, token, \"increment\", setToastMessage);\n      }\n\n      navigate(\"/cart\");\n    }\n\n    navigate(\"/cart\");\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\"\n    });\n    throw new Error(\"Can not be added to cart\");\n  }\n};\nexport const addAddress = (values, authDispatch, setToastmessage) => {\n  const newAddress = {\n    id: uuid(),\n    ...values\n  };\n  authDispatch({\n    type: \"ADD_ADDRESS\",\n    payload: newAddress\n  });\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data,\n    addresses: [...data.addresses, newAddress]\n  };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  setToastmessage({\n    type: \"success\",\n    message: \"Address added\"\n  });\n};\nexport const deleteAddress = (id, addresses, authDispatch, setToastMessage) => {\n  const updatedAddressList = addresses.filter(_address => _address.id !== id);\n  authDispatch({\n    type: \"DELETE_ADDRESS\",\n    payload: updatedAddressList\n  });\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data,\n    addresses: updatedAddressList\n  };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  setToastMessage({\n    type: \"success\",\n    message: \"Address deleted\"\n  });\n};\nexport const editAddress = (id, addresses, authDispatch, values, setToastMessage, setIsEditing) => {\n  const updatedAddressList = addresses.map(_address => {\n    if (_address.id === id) {\n      return { ..._address,\n        ...values\n      };\n    }\n\n    return _address;\n  });\n  authDispatch({\n    type: \"UPDATE_ADDRESS\",\n    payload: updatedAddressList\n  });\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data,\n    addresses: updatedAddressList\n  };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  setToastMessage({\n    type: \"success\",\n    message: \"Address updated\"\n  });\n  setIsEditing({\n    index: -1\n  });\n};\nexport const emptyCart = async (token, dataDispatch) => {\n  try {\n    const res = await axios.delete(\"/api/user/cart\", {\n      headers: {\n        authorization: token\n      }\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dataDispatch({\n        type: \"EMPTY_CART\",\n        payload: res.data.cart\n      });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data,\n      cart: res.data.cart\n    };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  } catch (error) {\n    throw new Error(\"Can not empty cart\");\n  }\n};","map":{"version":3,"sources":["/home/dantey/Desktop/workspace/git_port/progress/autodecore/src/utils/server-requests.js"],"names":["axios","v4","uuid","isInList","getProduct","getProducts","dispatch","res","get","status","type","payload","data","products","error","Error","getCategories","categories","err","getCart","token","cart","JSON","parse","localStorage","getItem","getWishList","wishlist","login","email","password","setIsLoading","navigate","setToastMessage","from","post","setItem","stringify","foundUser","encodedToken","firstName","message","response","signup","lastName","method","url","toggleWishList","product","setIsUpdating","state","productsInWishList","_id","headers","authorization","removeItemFromWishlist","addItemToCart","removeItemFromCart","saveToWishlist","updateProductQuantity","action","moveToCart","productsInCart","cartProduct","qty","avalQty","addAddress","values","authDispatch","setToastmessage","newAddress","id","addresses","deleteAddress","updatedAddressList","filter","_address","editAddress","setIsEditing","map","index","emptyCart","dataDispatch","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { isInList, getProduct } from \"./helper-function\";\n\nexport const getProducts = async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/products\");\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({ type: \"SET_PRODUCTS\", payload: res.data.products });\n    }\n  } catch (error) {\n    throw new Error(\"Products can not be loaded\");\n  }\n};\n\nexport const getCategories = async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/categories\");\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({ type: \"SET_CATEGORIES\", payload: res.data.categories });\n    }\n  } catch (err) {\n    throw new Error(\"Categories can not be loaded,\", err);\n  }\n};\n\nexport const getCart = async (dispatch, token) => {\n  if (token) {\n    const cart = JSON.parse(localStorage.getItem(\"data\")).cart;\n\n    dispatch({ type: \"SET_CART\", payload: cart });\n  }\n};\n\nexport const getWishList = async (dispatch, token) => {\n  if (token) {\n    const wishlist = JSON.parse(localStorage.getItem(\"data\")).wishlist;\n\n    dispatch({ type: \"SET_WISHLIST\", payload: wishlist });\n  }\n};\n\nexport const login = async (\n  dispatch,\n  email,\n  password,\n  setIsLoading,\n  navigate,\n  setToastMessage,\n  from\n) => {\n  setIsLoading(true);\n  try {\n    const res = await axios.post(\"/api/auth/login\", {\n      email,\n      password,\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({ type: \"LOGIN\", payload: res.data });\n\n      localStorage.setItem(\"data\", JSON.stringify(res.data.foundUser));\n      localStorage.setItem(\"token\", res.data.encodedToken);\n      localStorage.setItem(\"userName\", res.data.foundUser.firstName);\n    }\n\n    setIsLoading(false);\n    navigate(from);\n    setToastMessage({ type: \"success\", message: \"Login Successful!\" });\n  } catch (error) {\n    if (error.response?.status == 404) {\n      setToastMessage({\n        type: \"info\",\n        message: \"You are not registered with us. Please sign up\",\n      });\n    } else {\n      setToastMessage({ type: \"error\", message: \"Inavid email or password.\" });\n    }\n\n    setIsLoading(false);\n    throw new Error(\"can not be logged in\");\n  }\n};\n\nexport const signup = async (\n  email,\n  password,\n  firstName,\n  lastName,\n  dispatch,\n  setIsLoading,\n  navigate,\n  setToastMessage\n) => {\n  setIsLoading(true);\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"/api/auth/signup\",\n      data: {\n        email,\n        password,\n        firstName,\n        lastName,\n      },\n    });\n\n    if (res.status == 201) {\n      login(dispatch, email, password, setIsLoading, navigate);\n\n      setIsLoading(false);\n\n      setToastMessage({ type: \"success\", message: \"Signup Successful\" });\n    }\n  } catch (error) {\n    setIsLoading(false);\n    if (error.response?.status == 422) {\n      setToastMessage({\n        type: \"info\",\n        message: \"You are already registerd. Please log in\",\n      });\n    }\n\n    throw new Error(\"Can not sign up\");\n  }\n};\n\nexport const toggleWishList = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  state,\n  token,\n  setToastMessage\n) => {\n  setIsUpdating(true);\n  if (!isInList(state.productsInWishList, product._id)) {\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: \"/api/user/wishlist\",\n        data: {\n          product,\n        },\n        headers: {\n          authorization: token,\n        },\n      });\n      if ((res.status = \"200\" || res.status == \"201\")) {\n        dispatch({ type: \"ADD_TO_WISHLIST\", payload: res.data.wishlist });\n\n        let data = JSON.parse(localStorage.getItem(\"data\"));\n        data = { ...data, wishlist: [...data.wishlist, product] };\n        localStorage.setItem(\"data\", JSON.stringify(data));\n      }\n      setIsUpdating(false);\n      setToastMessage({ type: \"info\", message: \"Item added to wishlist\" });\n    } catch (error) {\n      setToastMessage({\n        type: \"error\",\n        message: \"Action failed. Please try again later.\",\n      });\n      throw new Error(\"can not be added to wishlist\");\n    }\n  } else {\n    removeItemFromWishlist(\n      dispatch,\n      product,\n      setIsUpdating,\n      token,\n      setToastMessage\n    );\n  }\n};\n\nexport const removeItemFromWishlist = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  token,\n  setToastMessage\n) => {\n  try {\n    const res = await axios({\n      method: \"delete\",\n      url: `/api/user/wishlist/${product[\"_id\"]}`,\n      headers: {\n        authorization: token,\n      },\n    });\n\n    if ((res.status = \"200\" || res.status == \"201\")) {\n      dispatch({\n        type: \"REMOVE_ITEM_FROM_WISHLIST\",\n        payload: res.data.wishlist,\n      });\n\n      let data = JSON.parse(localStorage.getItem(\"data\"));\n      data = { ...data, wishlist: res.data.wishlist };\n      localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n\n    setIsUpdating(false);\n    setToastMessage({ type: \"info\", message: \"Item removed from wishlist\" });\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n    throw new Error(\"can not be deleted from wishlist\");\n  }\n};\n\nexport const addItemToCart = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  state,\n  token,\n  setToastMessage\n) => {\n  try {\n    setIsUpdating(true);\n    const res = await axios({\n      method: \"post\",\n      url: \"/api/user/cart\",\n      data: {\n        product,\n      },\n      headers: {\n        authorization: token,\n      },\n    });\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"SET_CART\",\n        payload: res.data.cart,\n      });\n\n      let data = JSON.parse(localStorage.getItem(\"data\"));\n      data = { ...data, cart: [...data.cart, product] };\n      localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n\n    setToastMessage({ type: \"info\", message: \"Item added to cart\" });\n    setIsUpdating(false);\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n    throw new Error(\"failed! try again\");\n  }\n};\n\nexport const removeItemFromCart = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  token,\n  setToastMessage\n) => {\n  setIsUpdating(true);\n  try {\n    const res = await axios({\n      method: \"delete\",\n      url: `/api/user/cart/${product._id}`,\n      headers: {\n        authorization: token,\n      },\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({ type: \"REMOVE_ITEM_FROM_CART\", payload: res.data.cart });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data, cart: res.data.cart };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n\n    setIsUpdating(false);\n\n    setToastMessage({ type: \"info\", message: \"Item is removed from cart.\" });\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n    throw new Error(\"Item can not be removed\");\n  }\n};\n\nexport const saveToWishlist = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  state,\n  token,\n  setToastMessage\n) => {\n  try {\n    removeItemFromCart(dispatch, product, setIsUpdating, token);\n\n    if (!isInList(state.productsInWishList, product._id)) {\n      toggleWishList(dispatch, product, setIsUpdating, state, token);\n    }\n\n    setToastMessage({ type: \"info\", message: \"Item is saved to wishlist\" });\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n    throw new Error(\"Item can not be saved to wishlist\");\n  }\n};\n\nexport const updateProductQuantity = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  state,\n  token,\n  type,\n  setToastMessage\n) => {\n  setIsUpdating(true);\n\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: `/api/user/cart/${product._id}`,\n      data: {\n        action: {\n          type,\n        },\n      },\n      headers: {\n        authorization: token,\n      },\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dispatch({\n        type: \"UPDATE_CART_QUANTITY\",\n        payload: res.data.cart,\n      });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data, cart: res.data.cart };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n\n    setIsUpdating(false);\n  } catch (error) {\n    setIsUpdating(false);\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n  }\n};\n\nexport const moveToCart = async (\n  dispatch,\n  product,\n  setIsUpdating,\n  state,\n  token,\n  navigate,\n  setToastMessage\n) => {\n  try {\n    if (!isInList(state.productsInCart, product._id)) {\n      await addItemToCart(\n        dispatch,\n        product,\n        setIsUpdating,\n        state,\n        token,\n        setToastMessage\n      );\n    } else {\n      const cartProduct = getProduct(state.productsInCart, product._id);\n\n      if (cartProduct.qty < cartProduct.avalQty) {\n        await updateProductQuantity(\n          dispatch,\n          product,\n          setIsUpdating,\n          state,\n          token,\n          \"increment\",\n          setToastMessage\n        );\n      }\n\n      navigate(\"/cart\");\n    }\n\n    navigate(\"/cart\");\n  } catch (error) {\n    setToastMessage({\n      type: \"error\",\n      message: \"Action failed. Please try again later.\",\n    });\n    throw new Error(\"Can not be added to cart\");\n  }\n};\n\nexport const addAddress = (values, authDispatch, setToastmessage) => {\n  const newAddress = { id: uuid(), ...values };\n  authDispatch({ type: \"ADD_ADDRESS\", payload: newAddress });\n\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data, addresses: [...data.addresses, newAddress] };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n\n  setToastmessage({ type: \"success\", message: \"Address added\" });\n};\n\nexport const deleteAddress = (id, addresses, authDispatch, setToastMessage) => {\n  const updatedAddressList = addresses.filter((_address) => _address.id !== id);\n\n  authDispatch({ type: \"DELETE_ADDRESS\", payload: updatedAddressList });\n\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data, addresses: updatedAddressList };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n\n  setToastMessage({ type: \"success\", message: \"Address deleted\" });\n};\n\nexport const editAddress = (\n  id,\n  addresses,\n  authDispatch,\n  values,\n  setToastMessage,\n  setIsEditing\n) => {\n  const updatedAddressList = addresses.map((_address) => {\n    if (_address.id === id) {\n      return { ..._address, ...values };\n    }\n\n    return _address;\n  });\n\n  authDispatch({ type: \"UPDATE_ADDRESS\", payload: updatedAddressList });\n\n  let data = JSON.parse(localStorage.getItem(\"data\"));\n  data = { ...data, addresses: updatedAddressList };\n  localStorage.setItem(\"data\", JSON.stringify(data));\n\n  setToastMessage({ type: \"success\", message: \"Address updated\" });\n\n  setIsEditing({ index: -1 });\n};\n\nexport const emptyCart = async (token, dataDispatch) => {\n  try {\n    const res = await axios.delete(\"/api/user/cart\", {\n      headers: {\n        authorization: token,\n      },\n    });\n\n    if (res.status == 200 || res.status == 201) {\n      dataDispatch({ type: \"EMPTY_CART\", payload: res.data.cart });\n    }\n\n    let data = JSON.parse(localStorage.getItem(\"data\"));\n    data = { ...data, cart: res.data.cart };\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  } catch (error) {\n    throw new Error(\"Can not empty cart\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}